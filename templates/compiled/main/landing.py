from __future__ import division
from jinja2.runtime import LoopContext, TemplateReference, Macro, Markup, TemplateRuntimeError, missing, concat, escape, markup_join, unicode_join, to_string, identity, TemplateNotFound
def run(environment):
    name = '/source\\main\\landing.html'

    def root(context, environment=environment):
        if 0: yield None
        yield u'<!doctype html>\n<html class="no-js" lang="en">\n\n<head>\n    <!-- Meta -->\n    <meta charset="utf-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n    <meta name="description" content="Visualizations of BSD\'s Harvest data using D3.js">\n    <meta name="author" content="Sam Gammon <sgammon@bluestatedigital.com>">\n    <meta name="viewport" content="width=device-width">\n\n    <!-- Title -->\n    <title>BSD Harvest Experiments</title>\n\n    <!-- Styles -->\n    <style>@import url(http://fonts.googleapis.com/css?family=Satisfy);</style>\n    <style>@import url(http://fonts.googleapis.com/css?family=Cabin);</style>\n    <link rel="stylesheet" href="/assets/style/static/compiled/style.css">\n</head>\n\n<body>\n\n    <script>\n        var _deferred_init = [];\n        function defer(fn, args)\n        {\n            _deferred_init.push({callback: fn, args: args});\n        }\n    </script>\n    <style>\n        rect {\n          fill: none;\n          stroke: #fff;\n        }\n\n        text {\n          font: 10px sans-serif;\n        }\n    </style>\n\n    <!-- Templates -->\n    <div id=\'js-templates\' class=\'hidden resource\'>\n    </div>\n\n    <!-- Header -->\n    <div id="header-container">\n        <header id=\'topheader\' class="wrapper clearfix">\n            <h1 id="title">Harvest Experiments</h1>\n            <nav id=\'topnavigation\'>\n                <ul>\n                    <li><a href="javascript:changeNav()">dashboard</a></li>\n                    <li><a href="#">projects</a></li>\n                    <li><a href="#">employees</a></li>\n                    <li><a href="#">budgets</a></li>\n                </ul>\n            </nav>\n        </header>\n        <div id=\'menuslide\' data-state=\'closed\'>\n            <a href="javascript:toogleNavVisible();">\n                <img id=\'arrowdown\' src=\'/assets/img/static/sprites/arrowdown.png\' alt=\'open navigation\' />\n                <img id=\'arrowup\' src=\'/assets/img/static/sprites/arrowup.png\' class=\'hidden\' />\n            </a>\n        </div>\n    </div> <!-- #header-container -->\n\n\n    <!-- Main -->\n    <div id="main-container">\n        <div id="main" class="wrapper clearfix">\n\n            <div id=\'main-loading-box\' class=\'blockoverlay\'>\n                <p>loading</p>\n            </div>\n\n            <div id=\'stage\' class=\'app resource\'>\n\n                <!-- Landing Page -->\n                <div id=\'landing-page\' class=\'app page\' data-template=\'landing\'>\n\n                    <div class=\'fullwidth\'>\n\n                        <h1 class=\'floatleft spaceright inline\'>Dashboard</h1>\n\n                        <div class=\'floatleft inline filterbar\'>\n\n                            <form id=\'filters\' name=\'filters\' action=\'#\'>\n\n                                <span class=\'section\'>\n                                    <b>layout:</b>\n                                    <div class=\'config links\'>\n                                        <a href=\'#\' class=\'selected bubble\'>treemap</a> | <a href=\'#\'>masonry</a> | <a href=\'#\'>calendar</a> | <a href=\'#\'>streamgraph</a>\n                                    </div>\n                                    <select name=\'layout\' class=\'hidden config dropdown\'>\n                                        <option value=\'treemap\'>treemap</option>\n                                        <option value=\'masonry\'>masonry</option>\n                                        <option value=\'calendar\'>calendar</option>\n                                        <option value=\'streamgraph\'>streamgraph</option>\n                                    </select>\n                                </span>\n\n                                <span class=\'section\'>\n                                    <b>weight by:</b> <select name=\'weightby\'>\n\n                                        <option value=\'total\'>total hours</option>\n                                        <option value=\'billable\'>billable hours</option>\n                                        <option value=\'budget\'>budget target</option>\n\n                                    </select>\n                                </span>\n\n                                <span class=\'section\'>\n                                    <b>show clients:</b> <select name=\'clients\'>\n                                        <option value=\'all\'>all clients</option>\n                                        <option value=\'strategy\'>strategy</option>\n                                        <option value=\'tech\'>technology</option>\n                                        <option value=\'bizdev\'>biz dev</option>\n                                    </select>\n                                </span>\n\n                                <span class=\'section\'>\n                                    <b>export:</b>\n                                    <div class=\'config links\'>\n                                        <a href=\'#\'>image</a> | <a href=\'#\'>csv</a> | <a href=\'#\'>pdf</a>\n                                    </div>\n                                    <select name=\'export\' class=\'hidden config dropdown\'>\n                                        <option value=\'__select__\'>(select format)</option>\n                                        <option value=\'image\'>image</option>\n                                        <option value=\'csv\'>csv</option>\n                                        <option value=\'pdf\'>pdf</option>\n                                    </select>\n                                </span>\n\n                                <span class=\'section\'>\n                                    <input type=\'submit\' value=\'refresh\' />\n                                </span>\n\n                            </form>\n\n                        </div>\n\n                        <div class=\'clearboth\'></div>\n\n\n                    </div>\n\n                    <div class=\'columns\'>\n                        <!-- Projects Column -->\n                        <div id=\'landing-projects-column\' class=\'absolute inline snapleft snaptop snapbottom almosthalfwidth\'>\n\n                            <div id=\'project-summary-treemap\' data-type=\'d3viz\' class=\'fullwidth fullheight\'>\n                            </div>\n\n                            <div id=\'project-summary-masonry\' data-type=\'d3viz\' class=\'hidden fullwidth fullheight\'>\n                                <img src=\'http://placehold.it/450x575&text=Project%20Masonry\' alt=\'Project Masonry\' />\n                            </div>\n\n                            <div id=\'project-summary-calendar\' data-type=\'d3viz\' class=\'hidden fullwidth fullheight\'>\n                                <img src=\'http://placehold.it/450x575&text=Project%20Calendar\' alt=\'Project Calendar\' />\n                            </div>\n\n                            <div id=\'project-summary-streamgraph\' data-type=\'d3viz\' class=\'hidden fullwidth fullheight\'>\n                                <img src=\'http://placehold.it/450x575&text=Project%20Streamgraph\' alt=\'Project Streamgraph\' />\n                            </div>\n\n                        </div>\n\n\n                        <!-- Employees Column -->\n                        <div id=\'landing-employees-column\' class=\'absolute inline snapright snaptop snapbottom almosthalfwidth\'>\n\n                            <div id=\'employee-summary-treemap\' data-type=\'d3viz\' class=\'fullwidth fullheight\'>\n                            </div>\n\n                            <div id=\'employee-summary-masonry\' data-type=\'d3viz\' class=\'hidden fullwidth fullheight\'>\n                                <img src=\'http://placehold.it/450x575&text=Employee%20Masonry\' alt=\'Employee Masonry\' />\n                            </div>\n\n                            <div id=\'employee-summary-calendar\' data-type=\'d3viz\' class=\'hidden fullwidth fullheight\'>\n                                <img src=\'http://placehold.it/450x575&text=Employee%20Calendar\' alt=\'Employee Calendar\' />\n                            </div>\n\n                            <div id=\'employee-summary-streamgraph\' data-type=\'d3viz\' class=\'hidden fullwidth fullheight\'>\n                                <img src=\'http://placehold.it/450x575&text=Employee%20Streamgraph\' alt=\'Employee Streamgraph\' />\n                            </div>\n\n                        </div>\n                    </div>\n\n\n\n                    <div class=\'clearboth\'></div>\n\n\n                    <!-- Timeline -->\n                    <div id=\'landing-timeline\' class=\'fullwidth inline absolute snapbottom\'>\n                        <img src=\'http://placehold.it/900x80&text=Timeline\' alt=\'Timeline\' />\n                    </div>\n\n\n                </div>\n\n                <!-- Projects Summary -->\n                <div id=\'projects-page\' class=\'hidden unrendered app page\' data-template=\'projects\'>\n                </div>\n\n                <!-- Employees Summary -->\n                <div id=\'employees-page\' class=\'hidden unrendered app page\' data-template=\'employees\'>\n                </div>\n\n                <!-- Budgets Summary -->\n                <div id=\'budgets-page\' class=\'hidden unrendered app page\' data-template=\'budgets\'>\n                </div>\n\n                <!-- Raw Data -->\n                <div id=\'rawdata-page\' class=\'hidden unrendered app page\' data-template=\'rawdata\'>\n                </div>\n\n            </div> <!-- #stage -->\n\n        </div> <!-- #main -->\n    </div> <!-- #main-container -->\n\n    <!-- Footer -->\n    <div id="footer-container">\n        <footer class="wrapper">\n            <h3>beta experiments - internal use only</h3>\n\n            <div id=\'logobox\'>\n                <div id=\'loadingbox\' class=\'hidden\'>\n                    <img id=\'indeterminate_loading\' src=\'/assets/img/static/sprites/loading.gif\' alt=\'loading...\' />\n                    <div id=\'determinate_loading\' class=\'hidden\'>\n                    </div>\n                </div>\n                <img src="/assets/img/static/logos/bsd.png" alt=\'blue state digital\' />\n            </div>\n        </footer>\n    </div> <!-- #footer-container -->\n\n    <!-- Base Scripts -->\n    <script src="/assets/js/static/core/underscore.min.js"></script>\n    <script src="/assets/js/static/core/modernizr.min.js"></script>\n    <script src="/assets/js/static/core/jquery.min.js"></script>\n    <script src="/assets/js/static/core/respond.min.js"></script>\n    <script src="/assets/js/static/core/backbone.min.js"></script>\n    <script src="/assets/js/static/core/mustache.min.js"></script>\n    <script src="/assets/js/static/utils.js"></script>\n\n    <!-- D3 -->\n    <script src="/assets/js/static/d3/d3.min.js"></script>\n    <script src="/assets/js/static/d3/d3.layout.min.js"></script>\n    <script src="/assets/js/static/d3/d3.geom.min.js"></script>\n    <script src="/assets/js/static/d3/d3.geo.min.js"></script>\n    <script src="/assets/js/static/d3/d3.time.min.js"></script>\n    <script src="/assets/js/static/d3/d3.csv.min.js"></script>\n    <script src="/assets/js/static/d3/d3.chart.min.js"></script>\n\n    <!-- D3 Viz App Code -->\n    <script src="/assets/js/static/compiled/d3viz.js"></script>\n\n    <!-- Demo Data -->\n    <script src="/assets/ext/static/data/ex/flare.js"></script>\n\n    <script>\n\n        function make_treemap(el, data_type, data_transform, data, label)\n        {\n\n            console.log(\'Making project summary treemap.\');\n            var w = $(el).width(),\n                h = $(el).height(),\n                color = d3.scale.category20c();\n\n            var treemap = d3.layout.treemap()\n                .size([w+1, h+1])\n                .children(function (d) {return isNaN(d.value) ? d3.entries(d.value) : null;})\n                .value(function (d) {return d.value;})\n                .sticky(true);\n\n            console.log(\'Treemap object: \', treemap);\n\n            var svg = d3.select(el).append("svg:svg")\n                    .style("width", w)\n                    .style("height", h)\n                .append("svg:g")\n                    .attr("transform", "translate(-.5, -.5)");\n\n            console.log(\'SVG Element: \', svg);\n\n            if (data_type == \'csv\')\n            {\n                get_data = d3.csv;\n            }\n            else\n            {\n                get_data = d3.json;\n            }\n\n            get_data(data, function (response) {\n\n                if (data_transform != null)\n                {\n                    response = data_transform(response);\n                }\n\n                console.log(\'Data Result: \', response);\n                var cell = svg.data(d3.entries(response)).selectAll("g")\n                        .data(treemap)\n                    .enter().append("svg:g")\n                        .attr("class", "cell")\n                        .attr("transform", function (d) {return "translate(" + d.x + "," + d.y + ")";});\n\n                cell.append("svg:rect")\n                    .attr("width", function (d) {return d.dx;})\n                    .attr("height", function (d) {return d.dy;})\n                    .style("fill", function (d) {return d.children ? color(d.data.key) : null;});\n\n                cell.append("svg:text")\n                    .attr("x", function (d) {return d.dx / 2;})\n                    .attr("y", function (d) {return d.dy / 2;})\n                    .attr("dy", ".35em")\n                    .attr("text-anchor", "middle")\n                    .text(function (d) {return d.children ? null : d.data.key;});\n\n                console.log(\'Cell: \', cell);\n\n                svg.append("svg:g")\n                    .attr("transform", function (d) {return "translate(0," + (h-40) + ")";})\n                    .append("svg:rect")\n                        .attr("width", w)\n                        .attr("height", 50)\n                        .style("fill", "black")\n                        .attr("class", "mainlabel")\n                        .style("opacity", 0.7);\n\n                svg.append("svg:g")\n                    .attr("transform", function (d) {return "translate(0, " + (h-20) + ")";})\n                    .append("svg:text")\n                        .attr("x", 15)\n                        .attr("y", 0)\n                        .attr("width", w)\n                        .attr("height", 50)\n                        .style("font-size", "14px")\n                        .style("font-weight", "bold")\n                        .style("fill", "white")\n                        .text(label);\n\n            });\n\n            return treemap\n        }\n\n        function processBudgetDataForSpend(all_projects)\n        {\n            final_projects_list = {};\n            prefix_detect_regex = new RegExp(/\\[[0-9]{0,7}\\]/);\n            for (project in all_projects)\n            {\n                project = all_projects[project];\n                var label = project.Project;\n\n                if (label.search(prefix_detect_regex) != \'-1\')\n                {\n                    label = label.replace(label.substring(label.search(prefix_detect_regex), 9), "").trim();\n                }\n\n                project_handle = label.toLowerCase().replace(/ /gi, "-").replace(/,/gi, "-");\n\n                if (!(project.Client in final_projects_list))\n                {\n                    final_projects_list[project.Client] = {};\n                }\n\n                final_projects_list[project.Client][project_handle] = project.Spent;\n            }\n            console.log(\'Final Project List\', final_projects_list);\n            return final_projects_list\n        }\n\n        function processBudgetDataForBudget(all_projects)\n        {\n            final_projects_list = {};\n            prefix_detect_regex = new RegExp(/\\[[0-9]{0,7}\\]/);\n            for (project in all_projects)\n            {\n                project = all_projects[project];\n                var label = project.Project;\n\n                if (label.search(prefix_detect_regex) != \'-1\')\n                {\n                    label = label.replace(label.substring(label.search(prefix_detect_regex), 9), "").trim();\n                }\n\n                project_handle = label.toLowerCase().replace(/ /gi, "-").replace(/,/gi, "-");\n\n                if (!(project.Client in final_projects_list))\n                {\n                    final_projects_list[project.Client] = {};\n                }\n\n                final_projects_list[project.Client][project_handle] = project.Budget;\n            }\n            console.log(\'Final Project List\', final_projects_list);\n            return final_projects_list\n        }\n\n        defer(make_treemap, ["#project-summary-treemap", \'csv\', processBudgetDataForSpend, "/assets/ext/static/data/budget-report.csv", "Project Spend Summary"]);\n        defer(make_treemap, ["#employee-summary-treemap", \'csv\', processBudgetDataForBudget, "/assets/ext/static/data/budget-report.csv", "Project Budget Summary"]);\n    </script>\n\n    <!-- App Init -->\n    <script>\n\n        $(document).ready(function () {\n\n            window.d3viz.internal.bootstrap(window, utils);\n\n            console.log(\'[APP]: Beginning app init...\');\n\n            window.AppWorkers = {};\n\n            // Boot up storage\n            console.log(\'[APP]: Loading Storage worker...\');\n            if (false)\n            {\n                window.AppWorkers.storage = new SharedWorker(\'/assets/js/static/compiled/storage.js\');\n                window.AppWorkers.storage.port.onmessage = d3viz.channels.storage.message;\n                d3viz.channels.enable(d3viz.channels.storage, window.AppWorkers.storage, window.AppWorkers.storage.port.postMessage);\n\n                console.log(\'[Storage]: Used SharedWorker interface.\', window.AppWorkers.storage, window.AppWorkers.storage.port, d3viz.channels.storage);\n            }\n            else\n            {\n                window.AppWorkers.storage = new Worker(\'/assets/js/static/compiled/storage.js\');\n                window.AppWorkers.storage.onmessage = d3viz.channels.storage.message;\n                d3viz.channels.enable(d3viz.channels.storage, window.AppWorkers.storage, window.AppWorkers.storage.postMessage);\n\n                console.log(\'[Storage]: Used Worker interface.\', window.AppWorkers.storage, window.AppWorkers.storage.postMessage, d3viz.channels.storage);\n            }\n\n            // Boot up render\n            console.log(\'[APP]: Loading Render worker...\');\n            window.AppWorkers.render = new Worker(\'/assets/js/static/compiled/render.js\');\n            window.AppWorkers.render.onmessage = d3viz.channels.render.message;\n            d3viz.channels.enable(d3viz.channels.render, window.AppWorkers.render, window.AppWorkers.render.postMessage);\n\n            console.log(\'[Render]: Engine activated.\', window.AppWorkers.render, window.AppWorkers.render.postMessage, d3viz.channels.render);\n\n            // Boot up csvparser\n            console.log(\'[APP]: Loading CSVParser worker...\');\n            window.AppWorkers.csvparser = new Worker(\'/assets/js/static/compiled/csvparser.js\');\n            window.AppWorkers.csvparser.onmessage = d3viz.channels.csvparser.message;\n            d3viz.channels.enable(d3viz.channels.csvparser, window.AppWorkers.csvparser, window.AppWorkers.csvparser.postMessage);\n\n            console.log(\'[CSVParser]: Engine activated.\', window.AppWorkers.csvparser, window.AppWorkers.csvparser.postMessage, d3viz.channels.csvparser);\n\n\n            console.log(\'Starting D3 viz engine...\');\n\n            window.d3viz.internal.execute_deferred(_deferred_init);\n\n            console.log(\'Engine started.\');\n\n        });\n\n    </script>\n\n\n</body>\n</html>'

    blocks = {}
    debug_info = ''
    return locals()